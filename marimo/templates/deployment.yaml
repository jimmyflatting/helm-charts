apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.appName }}
  template:
    metadata:
      labels:
        app: {{ .Values.appName }}
    spec:
      containers:
        - name: {{ .Values.appName }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.ports.targetPort }}
              protocol: "{{ .Values.service.ports.protocol }}"
          command:
            - "/bin/sh"
            - "-c"
            - "marimo server --port ${MARIMO_PORT} --host 0.0.0.0 --allow-origins ${MARIMO_ALLOW_ORIGINS} --no-token"
          envFrom:
            - configMapRef:
                name: {{ include "marimo.fullname" . }}-configmap
          {{- if or .Values.onyxia.s3.enabled .Values.onyxia.auth.enabled }}
            - secretRef:
                name: {{ include "marimo.fullname" . }}-secret
          {{- end }}
          resources:
            requests:
              cpu: "500m"
              memory: "500Mi"
            limits:
              cpu: "2000m"
              memory: "1024Mi"
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
      restartPolicy: Never